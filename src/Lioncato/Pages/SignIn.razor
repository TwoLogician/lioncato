@page "/sign-in"

@using Data
@using Microsoft.EntityFrameworkCore

@inherits AbstractComponentBase

@if (IsLoading)
{
    <Loading></Loading>
}
<div class="@AppClass.FadeIn align-items-center d-flex h-100 justify-content-center w-100">
    <RadzenCard Style="max-width: 400px;">
        <div Class="text-center">
            <img Class="mb-2" Src="https://image.twodo.app/icons/1946770.png" Style="width: 100px;">
            <h2 Class="mb-0">Lioncato</h2>
        </div>
        <RadzenTemplateForm Data="@User">
            <RadzenLabel Class="mb-1" Text="Username" />
            <RadzenTextBox @bind-Value="Info.Username" Class="mb-2 w-100" />

            <RadzenLabel Class="mb-1" Text="Password" />
            <RadzenPassword @bind-Value="Info.Password" Class="mb-2 w-100" />

            <RadzenButton ButtonType="ButtonType.Submit" Class="mt-2 w-100" Click="Login" Text="Sign in"></RadzenButton>
        </RadzenTemplateForm>
    </RadzenCard>
</div>

@code {

    public UserInfo Info = new UserInfo();

    protected async Task Login()
    {
        try
        {
            SetLoading(true);
            using var context = await DbFactory.CreateDbContextAsync();
            var user = await context.Users.FirstOrDefaultAsync(x => x.Username == Info.Username && x.Password == Info.Password.ToSHA512());
            if (user is null)
            {
                await Js.InvokeVoidAsync("alert", "Your account or password is incorrect");
                SetLoading(false);
                return;
            }
            await Service.SetUserAsync(LocalStorage, user);
            User = user;
            SetLoading(false);
            Navigation.NavigateTo("");
        }
        catch (Exception ex)
        {
            await ErrorAsync(ex);
        }
    }
}