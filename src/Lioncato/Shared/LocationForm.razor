@using Data
@using Pages

@inherits AbstractComponentBase

<div Class="@AppClass.FadeIn">
    <RadzenLabel Class="mb-1" Text="Name" />
    <RadzenTextBox @bind-Value="Location.Name" Class="mb-2 w-100" />

    <RadzenLabel Class="mb-1" Text="Apple Maps" />
    <RadzenTextBox @bind-Value="Location.AppleMapsUrl" Class="mb-2 w-100" />

    <RadzenLabel Class="mb-1" Text="Google Maps" />
    <RadzenTextBox @bind-Value="Location.GoogleMapsUrl" Class="mb-2 w-100" />

    <RadzenCheckBox @bind-Value="Location.IsPublic" Class="mb-2 mt-2" Name="Public" TValue="bool" />
    <RadzenLabel Class="align-middle mb-2 ml-2 mt-2" Text="Public" Component="Public" />

    <div Class="mt-2 row">
        <div Class="col-11 p-0 pr-1">
            <RadzenButton Class="w-100" Click="OnSave" Text="Save"></RadzenButton>
        </div>
        <div Class="col-1 p-0 pl-1">
            <RadzenButton ButtonStyle="ButtonStyle.Danger" Class="w-100" Click="OnDelete" Disabled="string.IsNullOrEmpty(Location.Id)" Icon="delete" />
        </div>
    </div>
</div>

@code {

    [Parameter]
    public LocationInfo Location { get; set; } = new LocationInfo();

    protected async Task OnDelete()
    {
        if (await ConfirmAsync())
        {
            Dialog.Close(new ActionInfo<LocationInfo>(ActionType.Delete, Location));
        }
    }

    protected async Task OnSave()
    {
        var validate = Location.Validate();
        if (!string.IsNullOrEmpty(validate))
        {
            await AlertAsync(validate);
            return;
        }
        Dialog.Close(new ActionInfo<LocationInfo>(ActionType.Save, Location));
    }
}